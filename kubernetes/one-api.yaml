apiVersion: v1
kind: ConfigMap
metadata:
  name: one-api-env-cm
  namespace: one-api
data:
  SQL_DSN: "postgres://keycloak:{{PASSWORD_POSTGRES}}@postgres:{{PORT_POSTGRES}}/oneapi" # 数据库
  SQL_MAX_IDLE_CONNS: "10"
  SQL_MAX_OPEN_CONNS: "100"
  SQL_CONN_MAX_LIFETIME: "30"
  REDIS_CONN_STRING: "redis://default:{{PASSWORD_REDIS}}@redis:{{PORT_REDIS}}" # redis
  REDIS_PASSWORD: "{{PASSWORD_REDIS}}"  # redis密码
  SESSION_SECRET: "zgsm-one-api-fxjwgs"
  GLOBAL_API_RATE_LIMIT: "180"
  GLOBAL_WEB_RATE_LIMIT: "180"
  RELAY_TIMEOUT: "180"
  TZ: "Asia/Shanghai"
  INITIAL_ROOT_TOKEN: "966c3157fe65461dbc731cd540b6cd5d" # 初始 root api-key
  INITIAL_ROOT_ACCESS_TOKEN: "e9e3-4cd3-abfc-36707f44ee1e" # 认证token
  SYNC_FREQUENCY: "60"
  MEMORY_CACHE_ENABLED: "false"
  CHANNEL_UPDATE_FREQUENCY: "1440"
  CHANNEL_TEST_FREQUENCY: "1440"
  POLLING_INTERVAL: "30"
  BATCH_UPDATE_ENABLED: "false"
  BATCH_UPDATE_INTERVAL: "5"
  #TIKTOKEN_CACHE_DIR: "/usr/local/lib/tiktoken/" # 无法连外网时，挂载本地的tiktoken缓存目录
  GEMINI_VERSION: "v1"
  THEME: "default"
  ENABLE_METRIC: "false"
  METRIC_QUEUE_SIZE: "10"
  METRIC_SUCCESS_RATE_THRESHOLD: "0.8"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: one-api
  namespace: one-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: one-api
  serviceName: one-api-service
  template:
    metadata:
      labels:
        app: one-api
    spec:
      containers:
        - image: mirrors.sangfor.com/justsong/one-api:latest
          imagePullPolicy: IfNotPresent
          name: one-api
          ports:
            - containerPort: 3000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: one-api-env-cm
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NODE_TYPE
              value: master
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "if [ $(echo $POD_NAME | awk -F'-' '{print $NF}') -ne 0 ]; then echo 'NODE_TYPE=slave' > /etc/environment; fi"]
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' | awk -F: '{print $2}'"
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - "wget -q -O - http://localhost:3000/api/status | grep -o '\"success\":\\s*true' | awk -F: '{print $2}'"
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  namespace: one-api
  name: one-api
  labels:
    app: one-api
spec:
  selector:
    app: one-api
  ports:
    - name: http
      port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP